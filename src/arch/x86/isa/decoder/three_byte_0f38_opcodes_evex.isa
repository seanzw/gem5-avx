// Copyright (c) 2008 The Regents of The University of Michigan
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met: redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer;
// redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution;
// neither the name of the copyright holders nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Authors: Gabe Black

////////////////////////////////////////////////////////////////////
//
// Decode the three byte opcodes with the 0f38 prefix.
//
'X86ISA::ThreeByte0F38Opcode': decode LEGACY_OP {
    format Inst {
        1: decode LEGACY_DECODEVAL {
            // 0x66
            0x1: decode OPCODE_OP {
                0x18: decode EVEX_L_EXTEND {
                    0x2: VBROADCASTSS(VZqo, Wq);
                }
                0x19: decode REX_W {
                    0x1: decode EVEX_L_EXTEND {
                        0x2: VBROADCASTSD(VZqo, Wq);
                        0x1: VBROADCASTSD(VYdo, Wq);
                    }
                }
                0x28: decode REX_W {
                    0x1: decode EVEX_L_EXTEND {
                        0x2: VPMULDQ(VZqo, WZqo);
                        0x1: VPMULDQ(VYdo, WYdo);
                        0x0: VPMULDQ(Vo, Wo);
                    }
                }
                0x2B: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPACKUSDW(VZqo, WZqo);
                        0x1: VPACKUSDW(VYdo, WYdo);
                        0x0: VPACKUSDW(Vo, Wo);
                    }
                }
                0x39: decode REX_W {
                    0x1: decode EVEX_L_EXTEND {
                        0x2: VPMINSQ(VZqo, WZqo);
                        0x1: VPMINSQ(VYdo, WYdo);
                        0x0: VPMINSQ(Vo, Wo);
                    }
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPMINSD(VZqo, WZqo);
                        0x1: VPMINSD(VYdo, WYdo);
                        0x0: VPMINSD(Vo, Wo);
                    }
                }
                0x40: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPMULLD(VZqo, WZqo);
                        0x1: VPMULLD(VYdo, WYdo);
                        0x0: VPMULLD(Vo, Wo);
                    }
                }
                0x58: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPBROADCASTD(VZqo, Wd);
                        0x1: VPBROADCASTD(VYdo, Wd);
                        0x0: VPBROADCASTD(Vo, Wd);
                    }
                }
                0x59: decode REX_W {
                    0x1: decode EVEX_L_EXTEND {
                        0x2: VPBROADCASTQ(VZqo, Wq);
                    }
                }
                0x7A: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPBROADCASTB(VZqo, Eqo);
                    }
                }
                0x7B: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPBROADCASTW(VZqo, Eqo);
                    }
                }
                0x7C: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPBROADCASTD(VZqo, Eqo);
                    }
                    0x1: decode EVEX_L_EXTEND {
                        0x2: VPBROADCASTQ(VZqo, Eqo);
                    }
                }
                0x98: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x2: VFMADD132PS(VZqo, WZqo);
                            0x1: VFMADD132PS(VYdo, WYdo);
                            0x0: VFMADD132PS(Vo, Wo);
                        }
                        0x1: decode EVEX_L_EXTEND {
                            0x2: VFMADD132PSBROADCAST(VZqo, WZqo);
                        }
                    }
                }
                0x9C: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x2: VFNMADD132PS(VZqo, WZqo);
                            0x1: VFNMADD132PS(VYdo, WYdo);
                            0x0: VFNMADD132PS(Vo, Wo);
                        }
                    }
                }
                0xA8: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x2: VFMADD213PS(VZqo, WZqo);
                            0x1: VFMADD213PS(VYdo, WYdo);
                            0x0: VFMADD213PS(Vo, Wo);
                        }
                        0x1: decode EVEX_L_EXTEND {
                            0x2: VFMADD213PSBROADCAST(VZqo, WZqo);
                        }
                    }
                }
                0xAC: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x2: VFNMADD213PS(VZqo, WZqo);
                            0x1: VFNMADD213PS(VYdo, WYdo);
                            0x0: VFNMADD213PS(Vo, Wo);
                        }
                        0x1: decode EVEX_L_EXTEND {
                            0x2: VFNMADD213PSBROADCAST(VZqo, WZqo);
                        }
                    }
                }
                0xAD: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x0: VFNMADD213SS(Vo, Wo);
                        }
                    }
                }
                0xB8: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x2: VFMADD231PS(VZqo, WZqo);
                            0x1: VFMADD231PS(VYdo, WYdo);
                            0x0: VFMADD231PS(Vo, Wo);
                        }
                        0x1: decode EVEX_L_EXTEND {
                            0x2: VFMADD231PSBROADCAST(VZqo, WZqo);
                        }
                    }
                }
                0xBC: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x2: VFNMADD231PS(VZqo, WZqo);
                            0x1: VFNMADD231PS(VYdo, WYdo);
                            0x0: VFNMADD231PS(Vo, Wo);
                        }
                    }
                }
                0xBD: decode REX_W {
                    0x0: decode EVEX_B {
                        0x0: decode EVEX_L_EXTEND {
                            0x0: VFNMADD231SS(Vo, Wo);
                        }
                    }
                }
            }
        }
        0: decode LEGACY_DECODEVAL {
            // 0xF3
            0x4: decode OPCODE_OP {
                0x30: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPMOVWB(WYdo, VZqo);
                    }
                }
                0x35: decode REX_W {
                    0x0: decode EVEX_L_EXTEND {
                        0x2: VPMOVDQ(WYdo, VZqo);
                        0x1: VPMOVDQ(Wo, VYdo);
                        0x0: VPMOVDQ(Wq, Vo);
                    }
                }
            }
        }
    }
}
